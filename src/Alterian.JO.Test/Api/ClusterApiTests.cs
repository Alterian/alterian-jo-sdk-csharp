/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.JO.Client;
using Alterian.JO.Api;
// uncomment below to import models
//using Alterian.JO.Model;

namespace Alterian.JO.Test.Api
{
    /// <summary>
    ///  Class for testing ClusterApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ClusterApiTests : IDisposable
    {
        private ClusterApi instance;

        public ClusterApiTests()
        {
            instance = new ClusterApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClusterApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ClusterApi
            //Assert.IsType<ClusterApi>(instance);
        }

        /// <summary>
        /// Test ClusterDecommissionDelete
        /// </summary>
        [Fact]
        public void ClusterDecommissionDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string targetnode = null;
            //instance.ClusterDecommissionDelete(targetnode);
        }

        /// <summary>
        /// Test ClusterDelete
        /// </summary>
        [Fact]
        public void ClusterDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ClusterDelete();
        }

        /// <summary>
        /// Test ClusterDiscoverPost
        /// </summary>
        [Fact]
        public void ClusterDiscoverPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ClusterDiscoverPost();
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClusterFlushPost
        /// </summary>
        [Fact]
        public void ClusterFlushPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ClusterFlushPost();
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClusterGet
        /// </summary>
        [Fact]
        public void ClusterGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? update = null;
            //bool? repair = null;
            //bool? includeSettings = null;
            //var response = instance.ClusterGet(update, repair, includeSettings);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClusterPost
        /// </summary>
        [Fact]
        public void ClusterPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ClusterPostRequest? clusterPostRequest = null;
            //var response = instance.ClusterPost(clusterPostRequest);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClusterPut
        /// </summary>
        [Fact]
        public void ClusterPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ClusterPutRequest? clusterPutRequest = null;
            //var response = instance.ClusterPut(clusterPutRequest);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClusterReregisterPost
        /// </summary>
        [Fact]
        public void ClusterReregisterPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? body = null;
            //var response = instance.ClusterReregisterPost(body);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClusterStreamGet
        /// </summary>
        [Fact]
        public void ClusterStreamGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? targetnode = null;
            //var response = instance.ClusterStreamGet(targetnode);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClusterStreamThroughputGet
        /// </summary>
        [Fact]
        public void ClusterStreamThroughputGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? targetnode = null;
            //var response = instance.ClusterStreamThroughputGet(targetnode);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClusterStreamThroughputPost
        /// </summary>
        [Fact]
        public void ClusterStreamThroughputPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int throughput = null;
            //string? targetnode = null;
            //var response = instance.ClusterStreamThroughputPost(throughput, targetnode);
            //Assert.IsType<ApiResponse>(response);
        }
    }
}
