/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.JO.Client;
using Alterian.JO.Api;
// uncomment below to import models
//using Alterian.JO.Model;

namespace Alterian.JO.Test.Api
{
    /// <summary>
    ///  Class for testing ClientApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ClientApiTests : IDisposable
    {
        private ClientApi instance;

        public ClientApiTests()
        {
            instance = new ClientApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClientApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ClientApi
            //Assert.IsType<ClientApi>(instance);
        }

        /// <summary>
        /// Test ClientClientAliasAliasNameDelete
        /// </summary>
        [Fact]
        public void ClientClientAliasAliasNameDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string aliasName = null;
            //var response = instance.ClientClientAliasAliasNameDelete(varClient, aliasName);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClientClientAliasAliasNameGet
        /// </summary>
        [Fact]
        public void ClientClientAliasAliasNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string aliasName = null;
            //var response = instance.ClientClientAliasAliasNameGet(varClient, aliasName);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClientClientAliasAliasNameTargetRuleorgroupPost
        /// </summary>
        [Fact]
        public void ClientClientAliasAliasNameTargetRuleorgroupPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string aliasName = null;
            //TargetEnum target = null;
            //string ruleorgroup = null;
            //var response = instance.ClientClientAliasAliasNameTargetRuleorgroupPost(varClient, aliasName, target, ruleorgroup);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClientClientAliasAliasNameTargetRuleorgroupPut
        /// </summary>
        [Fact]
        public void ClientClientAliasAliasNameTargetRuleorgroupPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string aliasName = null;
            //TargetEnum target = null;
            //string ruleorgroup = null;
            //var response = instance.ClientClientAliasAliasNameTargetRuleorgroupPut(varClient, aliasName, target, ruleorgroup);
            //Assert.IsType<ResourceAndStatusResponse>(response);
        }

        /// <summary>
        /// Test ClientClientAliasGet
        /// </summary>
        [Fact]
        public void ClientClientAliasGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //var response = instance.ClientClientAliasGet(varClient);
            //Assert.IsType<ClientResponse>(response);
        }

        /// <summary>
        /// Test ClientClientCopyDestinationPut
        /// </summary>
        [Fact]
        public void ClientClientCopyDestinationPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string? destination = null;
            //var response = instance.ClientClientCopyDestinationPut(varClient, destination);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClientClientDelete
        /// </summary>
        [Fact]
        public void ClientClientDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //var response = instance.ClientClientDelete(varClient);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClientClientGet
        /// </summary>
        [Fact]
        public void ClientClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //bool? aszip = null;
            //bool? asdata = null;
            //var response = instance.ClientClientGet(varClient, aszip, asdata);
            //Assert.IsType<ClientResponse>(response);
        }

        /// <summary>
        /// Test ClientClientPost
        /// </summary>
        [Fact]
        public void ClientClientPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //ModelClient? modelClient = null;
            //var response = instance.ClientClientPost(varClient, modelClient);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClientClientPut
        /// </summary>
        [Fact]
        public void ClientClientPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //ModelClient? modelClient = null;
            //var response = instance.ClientClientPut(varClient, modelClient);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClientCopySourcePut
        /// </summary>
        [Fact]
        public void ClientCopySourcePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string source = null;
            //string? destination = null;
            //var response = instance.ClientCopySourcePut(source, destination);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test ClientGet
        /// </summary>
        [Fact]
        public void ClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ClientGet();
            //Assert.IsType<ClientResponse>(response);
        }
    }
}
