/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.JO.Client;
using Alterian.JO.Api;
// uncomment below to import models
//using Alterian.JO.Model;

namespace Alterian.JO.Test.Api
{
    /// <summary>
    ///  Class for testing RulegroupsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RulegroupsApiTests : IDisposable
    {
        private RulegroupsApi instance;

        public RulegroupsApiTests()
        {
            instance = new RulegroupsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RulegroupsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' RulegroupsApi
            //Assert.IsType<RulegroupsApi>(instance);
        }

        /// <summary>
        /// Test DownloadRulegroupClientTargetRulegroupnameGet
        /// </summary>
        [Fact]
        public void DownloadRulegroupClientTargetRulegroupnameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //TargetEnum target = null;
            //string rulegroupname = null;
            //instance.DownloadRulegroupClientTargetRulegroupnameGet(varClient, target, rulegroupname);
        }

        /// <summary>
        /// Test RulegroupClientDelete
        /// </summary>
        [Fact]
        public void RulegroupClientDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //instance.RulegroupClientDelete(varClient);
        }

        /// <summary>
        /// Test RulegroupClientGet
        /// </summary>
        [Fact]
        public void RulegroupClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //int? from = null;
            //int? to = null;
            //bool? includeproperties = null;
            //bool? allversions = null;
            //instance.RulegroupClientGet(varClient, from, to, includeproperties, allversions);
        }

        /// <summary>
        /// Test RulegroupClientTargetDelete
        /// </summary>
        [Fact]
        public void RulegroupClientTargetDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //TargetEnum target = null;
            //instance.RulegroupClientTargetDelete(varClient, target);
        }

        /// <summary>
        /// Test RulegroupClientTargetGet
        /// </summary>
        [Fact]
        public void RulegroupClientTargetGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //TargetEnum target = null;
            //int? from = null;
            //int? to = null;
            //bool? includeproperties = null;
            //bool? allversions = null;
            //instance.RulegroupClientTargetGet(varClient, target, from, to, includeproperties, allversions);
        }

        /// <summary>
        /// Test RulegroupClientTargetRulegroupnameCopytoPost
        /// </summary>
        [Fact]
        public void RulegroupClientTargetRulegroupnameCopytoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //TargetEnum target = null;
            //string rulegroupname = null;
            //string? body = null;
            //var response = instance.RulegroupClientTargetRulegroupnameCopytoPost(varClient, target, rulegroupname, body);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test RulegroupClientTargetRulegroupnameDelete
        /// </summary>
        [Fact]
        public void RulegroupClientTargetRulegroupnameDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //TargetEnum target = null;
            //string rulegroupname = null;
            //instance.RulegroupClientTargetRulegroupnameDelete(varClient, target, rulegroupname);
        }

        /// <summary>
        /// Test RulegroupClientTargetRulegroupnameGet
        /// </summary>
        [Fact]
        public void RulegroupClientTargetRulegroupnameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //TargetEnum target = null;
            //string rulegroupname = null;
            //int? from = null;
            //int? to = null;
            //bool? includeproperties = null;
            //bool? allversions = null;
            //instance.RulegroupClientTargetRulegroupnameGet(varClient, target, rulegroupname, from, to, includeproperties, allversions);
        }

        /// <summary>
        /// Test RulegroupClientTargetRulegroupnamePost
        /// </summary>
        [Fact]
        public void RulegroupClientTargetRulegroupnamePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //TargetEnum target = null;
            //string rulegroupname = null;
            //RulegroupPostRequest rulegroupPostRequest = null;
            //var response = instance.RulegroupClientTargetRulegroupnamePost(varClient, target, rulegroupname, rulegroupPostRequest);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test RulegroupClientTargetRulegroupnamePut
        /// </summary>
        [Fact]
        public void RulegroupClientTargetRulegroupnamePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //TargetEnum target = null;
            //string rulegroupname = null;
            //RulegroupPostRequest rulegroupPostRequest = null;
            //var response = instance.RulegroupClientTargetRulegroupnamePut(varClient, target, rulegroupname, rulegroupPostRequest);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test RulegroupClientTargetRulegroupnameVersionDelete
        /// </summary>
        [Fact]
        public void RulegroupClientTargetRulegroupnameVersionDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //TargetEnum target = null;
            //string rulegroupname = null;
            //int varVersion = null;
            //instance.RulegroupClientTargetRulegroupnameVersionDelete(varClient, target, rulegroupname, varVersion);
        }

        /// <summary>
        /// Test RulegroupClientTargetRulegroupnameVersionGet
        /// </summary>
        [Fact]
        public void RulegroupClientTargetRulegroupnameVersionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //TargetEnum target = null;
            //string rulegroupname = null;
            //int varVersion = null;
            //instance.RulegroupClientTargetRulegroupnameVersionGet(varClient, target, rulegroupname, varVersion);
        }

        /// <summary>
        /// Test RulegroupGet
        /// </summary>
        [Fact]
        public void RulegroupGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? from = null;
            //int? to = null;
            //bool? includeproperties = null;
            //bool? allversions = null;
            //List<string>? iClients = null;
            //instance.RulegroupGet(from, to, includeproperties, allversions, iClients);
        }

        /// <summary>
        /// Test RulegroupPost
        /// </summary>
        [Fact]
        public void RulegroupPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RulegroupPostRequest rulegroupPostRequest = null;
            //var response = instance.RulegroupPost(rulegroupPostRequest);
            //Assert.IsType<ApiResponse>(response);
        }
    }
}
