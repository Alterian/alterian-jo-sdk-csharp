/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.JO.Client;
using Alterian.JO.Api;
// uncomment below to import models
//using Alterian.JO.Model;

namespace Alterian.JO.Test.Api
{
    /// <summary>
    ///  Class for testing InfoApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InfoApiTests : IDisposable
    {
        private InfoApi instance;

        public InfoApiTests()
        {
            instance = new InfoApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InfoApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' InfoApi
            //Assert.IsType<InfoApi>(instance);
        }

        /// <summary>
        /// Test InfoAuditlogClientGet
        /// </summary>
        [Fact]
        public void InfoAuditlogClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //int? from = null;
            //int? to = null;
            //TargetEnum? target = null;
            //CsvEnum? format = null;
            //var response = instance.InfoAuditlogClientGet(varClient, from, to, target, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoCachedataClientGet
        /// </summary>
        [Fact]
        public void InfoCachedataClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? varClient = null;
            //int? from = null;
            //int? to = null;
            //TargetEnum? target = null;
            //string? rulename = null;
            //string? cachedirection = null;
            //CsvEnum? format = null;
            //var response = instance.InfoCachedataClientGet(varClient, from, to, target, rulename, cachedirection, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoCacheunusedcolumnsClientGet
        /// </summary>
        [Fact]
        public void InfoCacheunusedcolumnsClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //int? from = null;
            //int? to = null;
            //TargetEnum? target = null;
            //CsvEnum? format = null;
            //var response = instance.InfoCacheunusedcolumnsClientGet(varClient, from, to, target, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoClientaccessreportClientGet
        /// </summary>
        [Fact]
        public void InfoClientaccessreportClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? varClient = null;
            //bool? includeClientAll = null;
            //bool? includePermissionAll = null;
            //CsvEnum? format = null;
            //var response = instance.InfoClientaccessreportClientGet(varClient, includeClientAll, includePermissionAll, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoConsistencyreportGet
        /// </summary>
        [Fact]
        public void InfoConsistencyreportGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? from = null;
            //int? to = null;
            //CsvEnum? format = null;
            //var response = instance.InfoConsistencyreportGet(from, to, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoConversationusagereportClientTimeseriesGet
        /// </summary>
        [Fact]
        public void InfoConversationusagereportClientTimeseriesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string timeseries = null;
            //string? varClient = null;
            //CsvEnum? format = null;
            //var response = instance.InfoConversationusagereportClientTimeseriesGet(timeseries, varClient, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoFieldusageTargetClientRulenameGet
        /// </summary>
        [Fact]
        public void InfoFieldusageTargetClientRulenameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TargetEnum target = null;
            //string varClient = null;
            //string rulename = null;
            //int? from = null;
            //int? to = null;
            //CsvEnum? format = null;
            //bool? mergefields = null;
            //var response = instance.InfoFieldusageTargetClientRulenameGet(target, varClient, rulename, from, to, format, mergefields);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoFlowTargetClientRulenameGet
        /// </summary>
        [Fact]
        public void InfoFlowTargetClientRulenameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TargetEnum target = null;
            //string varClient = null;
            //string rulename = null;
            //var response = instance.InfoFlowTargetClientRulenameGet(target, varClient, rulename);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoGlobalparamreportClientGet
        /// </summary>
        [Fact]
        public void InfoGlobalparamreportClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? varClient = null;
            //int? from = null;
            //int? to = null;
            //string? parameterName = null;
            //string? parameterValue = null;
            //bool? onlyGlobalParameters = null;
            //CsvEnum? format = null;
            //var response = instance.InfoGlobalparamreportClientGet(varClient, from, to, parameterName, parameterValue, onlyGlobalParameters, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoInternalrulecallreportClientTargetRulenameGet
        /// </summary>
        [Fact]
        public void InfoInternalrulecallreportClientTargetRulenameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //TargetEnum target = null;
            //string rulename = null;
            //CsvEnum? format = null;
            //var response = instance.InfoInternalrulecallreportClientTargetRulenameGet(varClient, target, rulename, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoLogged404sClientGet
        /// </summary>
        [Fact]
        public void InfoLogged404sClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? varClient = null;
            //int? from = null;
            //int? to = null;
            //int? limit = null;
            //CsvEnum? format = null;
            //var response = instance.InfoLogged404sClientGet(varClient, from, to, limit, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoResourceexistsreportPost
        /// </summary>
        [Fact]
        public void InfoResourceexistsreportPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string body = null;
            //var response = instance.InfoResourceexistsreportPost(body);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoRulecomplexityreportClientGet
        /// </summary>
        [Fact]
        public void InfoRulecomplexityreportClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //CsvEnum? format = null;
            //TargetEnum? target = null;
            //var response = instance.InfoRulecomplexityreportClientGet(varClient, format, target);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoSnoozeGet
        /// </summary>
        [Fact]
        public void InfoSnoozeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CsvEnum? format = null;
            //TargetEnum? target = null;
            //var response = instance.InfoSnoozeGet(format, target);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoSteptypestatisticsDelete
        /// </summary>
        [Fact]
        public void InfoSteptypestatisticsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.InfoSteptypestatisticsDelete();
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoSteptypestatisticsGet
        /// </summary>
        [Fact]
        public void InfoSteptypestatisticsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CsvEnum? format = null;
            //var response = instance.InfoSteptypestatisticsGet(format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoSteptypeusagereportClientGet
        /// </summary>
        [Fact]
        public void InfoSteptypeusagereportClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //CsvEnum? format = null;
            //TargetEnum? target = null;
            //var response = instance.InfoSteptypeusagereportClientGet(varClient, format, target);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoStepusagereportClientStepnameGet
        /// </summary>
        [Fact]
        public void InfoStepusagereportClientStepnameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string stepname = null;
            //string? varClient = null;
            //TargetEnum? target = null;
            //int? from = null;
            //int? to = null;
            //CsvEnum? format = null;
            //var response = instance.InfoStepusagereportClientStepnameGet(stepname, varClient, target, from, to, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoTemplatecolumnreportClientGet
        /// </summary>
        [Fact]
        public void InfoTemplatecolumnreportClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? varClient = null;
            //CsvEnum? format = null;
            //var response = instance.InfoTemplatecolumnreportClientGet(varClient, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoTemplateinputreportClientGet
        /// </summary>
        [Fact]
        public void InfoTemplateinputreportClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? varClient = null;
            //int? from = null;
            //int? to = null;
            //List<string>? inputFields = null;
            //bool? allversions = null;
            //CsvEnum? format = null;
            //var response = instance.InfoTemplateinputreportClientGet(varClient, from, to, inputFields, allversions, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoTemplateusagereportClientTemplatenameGet
        /// </summary>
        [Fact]
        public void InfoTemplateusagereportClientTemplatenameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string templatename = null;
            //string? varClient = null;
            //string? templateClient = null;
            //string? templateVersion = null;
            //int? from = null;
            //int? to = null;
            //TargetEnum? target = null;
            //CsvEnum? format = null;
            //var response = instance.InfoTemplateusagereportClientTemplatenameGet(templatename, varClient, templateClient, templateVersion, from, to, target, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoTemplatevalidityreportClientGet
        /// </summary>
        [Fact]
        public void InfoTemplatevalidityreportClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? varClient = null;
            //int? from = null;
            //int? to = null;
            //CsvEnum? format = null;
            //var response = instance.InfoTemplatevalidityreportClientGet(varClient, from, to, format);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoTokenusereportGet
        /// </summary>
        [Fact]
        public void InfoTokenusereportGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? from = null;
            //int? to = null;
            //string? user = null;
            //CsvEnum? format = null;
            //string? token = null;
            //var response = instance.InfoTokenusereportGet(from, to, user, format, token);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test InfoWorkerthreadusageGet
        /// </summary>
        [Fact]
        public void InfoWorkerthreadusageGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? from = null;
            //int? to = null;
            //CsvEnum? format = null;
            //var response = instance.InfoWorkerthreadusageGet(from, to, format);
            //Assert.IsType<ApiResponse>(response);
        }
    }
}
