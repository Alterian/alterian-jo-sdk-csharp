/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Alterian.JO.Client;
using Alterian.JO.Api;
// uncomment below to import models
//using Alterian.JO.Model;

namespace Alterian.JO.Test.Api
{
    /// <summary>
    ///  Class for testing TemplatesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TemplatesApiTests : IDisposable
    {
        private TemplatesApi instance;

        public TemplatesApiTests()
        {
            instance = new TemplatesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TemplatesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TemplatesApi
            //Assert.IsType<TemplatesApi>(instance);
        }

        /// <summary>
        /// Test DownloadTemplateClientTemplatenameGet
        /// </summary>
        [Fact]
        public void DownloadTemplateClientTemplatenameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string templatename = null;
            //var response = instance.DownloadTemplateClientTemplatenameGet(varClient, templatename);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test DownloadTemplateClientTemplatenameVersionGet
        /// </summary>
        [Fact]
        public void DownloadTemplateClientTemplatenameVersionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string templatename = null;
            //int varVersion = null;
            //var response = instance.DownloadTemplateClientTemplatenameVersionGet(varClient, templatename, varVersion);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test TemplateClientDelete
        /// </summary>
        [Fact]
        public void TemplateClientDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //var response = instance.TemplateClientDelete(varClient);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test TemplateClientGet
        /// </summary>
        [Fact]
        public void TemplateClientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //int? from = null;
            //int? to = null;
            //bool? allversions = null;
            //bool? getAllDetails = null;
            //bool? basicInfo = null;
            //string? targetClient = null;
            //string? searchText = null;
            //bool? includePublic = null;
            //List<string>? iClients = null;
            //var response = instance.TemplateClientGet(varClient, from, to, allversions, getAllDetails, basicInfo, targetClient, searchText, includePublic, iClients);
            //Assert.IsType<TemplateList>(response);
        }

        /// <summary>
        /// Test TemplateClientTemplatenameDelete
        /// </summary>
        [Fact]
        public void TemplateClientTemplatenameDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string templatename = null;
            //var response = instance.TemplateClientTemplatenameDelete(varClient, templatename);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test TemplateClientTemplatenameGet
        /// </summary>
        [Fact]
        public void TemplateClientTemplatenameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string templatename = null;
            //int? from = null;
            //int? to = null;
            //bool? allversions = null;
            //bool? getAllDetails = null;
            //string? targetClient = null;
            //var response = instance.TemplateClientTemplatenameGet(varClient, templatename, from, to, allversions, getAllDetails, targetClient);
            //Assert.IsType<TemplateList>(response);
        }

        /// <summary>
        /// Test TemplateClientTemplatenamePost
        /// </summary>
        [Fact]
        public void TemplateClientTemplatenamePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string templatename = null;
            //bool? validate = null;
            //System.IO.Stream? file = null;
            //string? settings = null;
            //var response = instance.TemplateClientTemplatenamePost(varClient, templatename, validate, file, settings);
            //Assert.IsType<ResourceAndStatusResponse>(response);
        }

        /// <summary>
        /// Test TemplateClientTemplatenamePut
        /// </summary>
        [Fact]
        public void TemplateClientTemplatenamePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string templatename = null;
            //Object? body = null;
            //var response = instance.TemplateClientTemplatenamePut(varClient, templatename, body);
            //Assert.IsType<ResourceAndStatusResponse>(response);
        }

        /// <summary>
        /// Test TemplateClientTemplatenameVersionDelete
        /// </summary>
        [Fact]
        public void TemplateClientTemplatenameVersionDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string templatename = null;
            //int varVersion = null;
            //var response = instance.TemplateClientTemplatenameVersionDelete(varClient, templatename, varVersion);
            //Assert.IsType<ApiResponse>(response);
        }

        /// <summary>
        /// Test TemplateClientTemplatenameVersionGet
        /// </summary>
        [Fact]
        public void TemplateClientTemplatenameVersionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string templatename = null;
            //int varVersion = null;
            //bool? getAllDetails = null;
            //string? targetClient = null;
            //var response = instance.TemplateClientTemplatenameVersionGet(varClient, templatename, varVersion, getAllDetails, targetClient);
            //Assert.IsType<TemplateList>(response);
        }

        /// <summary>
        /// Test TemplateClientTemplatenameVersionPost
        /// </summary>
        [Fact]
        public void TemplateClientTemplatenameVersionPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string varClient = null;
            //string templatename = null;
            //int varVersion = null;
            //string? targetClient = null;
            //Object? body = null;
            //var response = instance.TemplateClientTemplatenameVersionPost(varClient, templatename, varVersion, targetClient, body);
            //Assert.IsType<TemplateUpgradeResponse>(response);
        }

        /// <summary>
        /// Test TemplateGet
        /// </summary>
        [Fact]
        public void TemplateGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? from = null;
            //int? to = null;
            //bool? allversions = null;
            //bool? getAllDetails = null;
            //bool? basicInfo = null;
            //string? targetClient = null;
            //string? searchText = null;
            //bool? includePublic = null;
            //List<string>? iClients = null;
            //var response = instance.TemplateGet(from, to, allversions, getAllDetails, basicInfo, targetClient, searchText, includePublic, iClients);
            //Assert.IsType<TemplateList>(response);
        }

        /// <summary>
        /// Test TemplateTargetClientTemplatenameVersionPost
        /// </summary>
        [Fact]
        public void TemplateTargetClientTemplatenameVersionPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TargetEnum target = null;
            //string varClient = null;
            //string templatename = null;
            //int varVersion = null;
            //string? paramSource = null;
            //string? targetClient = null;
            //TemplatePublishSettings? templatePublishSettings = null;
            //var response = instance.TemplateTargetClientTemplatenameVersionPost(target, varClient, templatename, varVersion, paramSource, targetClient, templatePublishSettings);
            //Assert.IsType<ResourceAndStatusResponse>(response);
        }

        /// <summary>
        /// Test TemplateTargetClientTemplatenameVersionPut
        /// </summary>
        [Fact]
        public void TemplateTargetClientTemplatenameVersionPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TargetEnum target = null;
            //string varClient = null;
            //string templatename = null;
            //int varVersion = null;
            //string? targetClient = null;
            //ModelClient? modelClient = null;
            //var response = instance.TemplateTargetClientTemplatenameVersionPut(target, varClient, templatename, varVersion, targetClient, modelClient);
            //Assert.IsType<ApiResponse>(response);
        }
    }
}
