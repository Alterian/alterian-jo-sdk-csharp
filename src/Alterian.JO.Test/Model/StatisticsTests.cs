/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JO.Model;
using Alterian.JO.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JO.Test.Model
{
    /// <summary>
    ///  Class for testing Statistics
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class StatisticsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Statistics
        //private Statistics instance;

        public StatisticsTests()
        {
            // TODO uncomment below to create an instance of Statistics
            //instance = new Statistics();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Statistics
        /// </summary>
        [Fact]
        public void StatisticsInstanceTest()
        {
            // TODO uncomment below to test "IsType" Statistics
            //Assert.IsType<Statistics>(instance);
        }

        /// <summary>
        /// Test the property 'BulkLoad'
        /// </summary>
        [Fact]
        public void BulkLoadTest()
        {
            // TODO unit test for the property 'BulkLoad'
        }

        /// <summary>
        /// Test the property 'CumulativeInvokeTime'
        /// </summary>
        [Fact]
        public void CumulativeInvokeTimeTest()
        {
            // TODO unit test for the property 'CumulativeInvokeTime'
        }

        /// <summary>
        /// Test the property 'ErrorCount'
        /// </summary>
        [Fact]
        public void ErrorCountTest()
        {
            // TODO unit test for the property 'ErrorCount'
        }

        /// <summary>
        /// Test the property 'ErrorCountHealthScore'
        /// </summary>
        [Fact]
        public void ErrorCountHealthScoreTest()
        {
            // TODO unit test for the property 'ErrorCountHealthScore'
        }

        /// <summary>
        /// Test the property 'HealthScore'
        /// </summary>
        [Fact]
        public void HealthScoreTest()
        {
            // TODO unit test for the property 'HealthScore'
        }

        /// <summary>
        /// Test the property 'InvalidCount'
        /// </summary>
        [Fact]
        public void InvalidCountTest()
        {
            // TODO unit test for the property 'InvalidCount'
        }

        /// <summary>
        /// Test the property 'InvokeCountHealthScore'
        /// </summary>
        [Fact]
        public void InvokeCountHealthScoreTest()
        {
            // TODO unit test for the property 'InvokeCountHealthScore'
        }

        /// <summary>
        /// Test the property 'InvalidDataCountHealthScore'
        /// </summary>
        [Fact]
        public void InvalidDataCountHealthScoreTest()
        {
            // TODO unit test for the property 'InvalidDataCountHealthScore'
        }

        /// <summary>
        /// Test the property 'InvokeCount'
        /// </summary>
        [Fact]
        public void InvokeCountTest()
        {
            // TODO unit test for the property 'InvokeCount'
        }

        /// <summary>
        /// Test the property 'NewActiveConversation'
        /// </summary>
        [Fact]
        public void NewActiveConversationTest()
        {
            // TODO unit test for the property 'NewActiveConversation'
        }

        /// <summary>
        /// Test the property 'NewConversation'
        /// </summary>
        [Fact]
        public void NewConversationTest()
        {
            // TODO unit test for the property 'NewConversation'
        }

        /// <summary>
        /// Test the property 'RosCounts'
        /// </summary>
        [Fact]
        public void RosCountsTest()
        {
            // TODO unit test for the property 'RosCounts'
        }

        /// <summary>
        /// Test the property 'ServiceCost'
        /// </summary>
        [Fact]
        public void ServiceCostTest()
        {
            // TODO unit test for the property 'ServiceCost'
        }

        /// <summary>
        /// Test the property 'TotalTimeouts'
        /// </summary>
        [Fact]
        public void TotalTimeoutsTest()
        {
            // TODO unit test for the property 'TotalTimeouts'
        }

        /// <summary>
        /// Test the property 'TotalTimeoutsHealthScore'
        /// </summary>
        [Fact]
        public void TotalTimeoutsHealthScoreTest()
        {
            // TODO unit test for the property 'TotalTimeoutsHealthScore'
        }
    }
}
