/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JO.Model;
using Alterian.JO.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JO.Test.Model
{
    /// <summary>
    ///  Class for testing RuleComplexityReport
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RuleComplexityReportTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RuleComplexityReport
        //private RuleComplexityReport instance;

        public RuleComplexityReportTests()
        {
            // TODO uncomment below to create an instance of RuleComplexityReport
            //instance = new RuleComplexityReport();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RuleComplexityReport
        /// </summary>
        [Fact]
        public void RuleComplexityReportInstanceTest()
        {
            // TODO uncomment below to test "IsType" RuleComplexityReport
            //Assert.IsType<RuleComplexityReport>(instance);
        }

        /// <summary>
        /// Test the property 'NumberOfRules'
        /// </summary>
        [Fact]
        public void NumberOfRulesTest()
        {
            // TODO unit test for the property 'NumberOfRules'
        }

        /// <summary>
        /// Test the property 'CreateFutureEventSteps'
        /// </summary>
        [Fact]
        public void CreateFutureEventStepsTest()
        {
            // TODO unit test for the property 'CreateFutureEventSteps'
        }

        /// <summary>
        /// Test the property 'ProcessFutureEventSteps'
        /// </summary>
        [Fact]
        public void ProcessFutureEventStepsTest()
        {
            // TODO unit test for the property 'ProcessFutureEventSteps'
        }

        /// <summary>
        /// Test the property 'MaxHopCount'
        /// </summary>
        [Fact]
        public void MaxHopCountTest()
        {
            // TODO unit test for the property 'MaxHopCount'
        }

        /// <summary>
        /// Test the property 'MinHopCount'
        /// </summary>
        [Fact]
        public void MinHopCountTest()
        {
            // TODO unit test for the property 'MinHopCount'
        }

        /// <summary>
        /// Test the property 'AverageHopCount'
        /// </summary>
        [Fact]
        public void AverageHopCountTest()
        {
            // TODO unit test for the property 'AverageHopCount'
        }

        /// <summary>
        /// Test the property 'MinActiveCount'
        /// </summary>
        [Fact]
        public void MinActiveCountTest()
        {
            // TODO unit test for the property 'MinActiveCount'
        }

        /// <summary>
        /// Test the property 'MaxActiveCount'
        /// </summary>
        [Fact]
        public void MaxActiveCountTest()
        {
            // TODO unit test for the property 'MaxActiveCount'
        }

        /// <summary>
        /// Test the property 'AverageActiveCount'
        /// </summary>
        [Fact]
        public void AverageActiveCountTest()
        {
            // TODO unit test for the property 'AverageActiveCount'
        }

        /// <summary>
        /// Test the property 'MinStepCount'
        /// </summary>
        [Fact]
        public void MinStepCountTest()
        {
            // TODO unit test for the property 'MinStepCount'
        }

        /// <summary>
        /// Test the property 'MaxStepCount'
        /// </summary>
        [Fact]
        public void MaxStepCountTest()
        {
            // TODO unit test for the property 'MaxStepCount'
        }

        /// <summary>
        /// Test the property 'AverageStepCount'
        /// </summary>
        [Fact]
        public void AverageStepCountTest()
        {
            // TODO unit test for the property 'AverageStepCount'
        }

        /// <summary>
        /// Test the property 'CacheReadWriteRatio'
        /// </summary>
        [Fact]
        public void CacheReadWriteRatioTest()
        {
            // TODO unit test for the property 'CacheReadWriteRatio'
        }
    }
}
