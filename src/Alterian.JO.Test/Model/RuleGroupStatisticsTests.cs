/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JO.Model;
using Alterian.JO.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JO.Test.Model
{
    /// <summary>
    ///  Class for testing RuleGroupStatistics
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RuleGroupStatisticsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RuleGroupStatistics
        //private RuleGroupStatistics instance;

        public RuleGroupStatisticsTests()
        {
            // TODO uncomment below to create an instance of RuleGroupStatistics
            //instance = new RuleGroupStatistics();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RuleGroupStatistics
        /// </summary>
        [Fact]
        public void RuleGroupStatisticsInstanceTest()
        {
            // TODO uncomment below to test "IsType" RuleGroupStatistics
            //Assert.IsType<RuleGroupStatistics>(instance);
        }

        /// <summary>
        /// Test the property 'RelativeTime'
        /// </summary>
        [Fact]
        public void RelativeTimeTest()
        {
            // TODO unit test for the property 'RelativeTime'
        }

        /// <summary>
        /// Test the property 'LastSeen'
        /// </summary>
        [Fact]
        public void LastSeenTest()
        {
            // TODO unit test for the property 'LastSeen'
        }

        /// <summary>
        /// Test the property 'Cost'
        /// </summary>
        [Fact]
        public void CostTest()
        {
            // TODO unit test for the property 'Cost'
        }

        /// <summary>
        /// Test the property 'TotalTime'
        /// </summary>
        [Fact]
        public void TotalTimeTest()
        {
            // TODO unit test for the property 'TotalTime'
        }

        /// <summary>
        /// Test the property 'NewActiveConversation'
        /// </summary>
        [Fact]
        public void NewActiveConversationTest()
        {
            // TODO unit test for the property 'NewActiveConversation'
        }

        /// <summary>
        /// Test the property 'BulkLoad'
        /// </summary>
        [Fact]
        public void BulkLoadTest()
        {
            // TODO unit test for the property 'BulkLoad'
        }

        /// <summary>
        /// Test the property 'InvalidCount'
        /// </summary>
        [Fact]
        public void InvalidCountTest()
        {
            // TODO unit test for the property 'InvalidCount'
        }

        /// <summary>
        /// Test the property 'MatchedCount'
        /// </summary>
        [Fact]
        public void MatchedCountTest()
        {
            // TODO unit test for the property 'MatchedCount'
        }

        /// <summary>
        /// Test the property 'NewConversation'
        /// </summary>
        [Fact]
        public void NewConversationTest()
        {
            // TODO unit test for the property 'NewConversation'
        }

        /// <summary>
        /// Test the property 'TotalCount'
        /// </summary>
        [Fact]
        public void TotalCountTest()
        {
            // TODO unit test for the property 'TotalCount'
        }

        /// <summary>
        /// Test the property 'TimeoutCount'
        /// </summary>
        [Fact]
        public void TimeoutCountTest()
        {
            // TODO unit test for the property 'TimeoutCount'
        }

        /// <summary>
        /// Test the property 'ErrorCount'
        /// </summary>
        [Fact]
        public void ErrorCountTest()
        {
            // TODO unit test for the property 'ErrorCount'
        }
    }
}
