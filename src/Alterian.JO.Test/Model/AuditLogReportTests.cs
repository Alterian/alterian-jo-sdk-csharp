/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JO.Model;
using Alterian.JO.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JO.Test.Model
{
    /// <summary>
    ///  Class for testing AuditLogReport
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AuditLogReportTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AuditLogReport
        //private AuditLogReport instance;

        public AuditLogReportTests()
        {
            // TODO uncomment below to create an instance of AuditLogReport
            //instance = new AuditLogReport();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AuditLogReport
        /// </summary>
        [Fact]
        public void AuditLogReportInstanceTest()
        {
            // TODO uncomment below to test "IsType" AuditLogReport
            //Assert.IsType<AuditLogReport>(instance);
        }

        /// <summary>
        /// Test the property 'Target'
        /// </summary>
        [Fact]
        public void TargetTest()
        {
            // TODO unit test for the property 'Target'
        }

        /// <summary>
        /// Test the property 'VarClient'
        /// </summary>
        [Fact]
        public void VarClientTest()
        {
            // TODO unit test for the property 'VarClient'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Url'
        /// </summary>
        [Fact]
        public void UrlTest()
        {
            // TODO unit test for the property 'Url'
        }

        /// <summary>
        /// Test the property 'Auditlog'
        /// </summary>
        [Fact]
        public void AuditlogTest()
        {
            // TODO unit test for the property 'Auditlog'
        }

        /// <summary>
        /// Test the property 'Isrule'
        /// </summary>
        [Fact]
        public void IsruleTest()
        {
            // TODO unit test for the property 'Isrule'
        }
    }
}
