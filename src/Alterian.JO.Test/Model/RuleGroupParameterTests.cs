/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JO.Model;
using Alterian.JO.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JO.Test.Model
{
    /// <summary>
    ///  Class for testing RuleGroupParameter
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RuleGroupParameterTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RuleGroupParameter
        //private RuleGroupParameter instance;

        public RuleGroupParameterTests()
        {
            // TODO uncomment below to create an instance of RuleGroupParameter
            //instance = new RuleGroupParameter();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RuleGroupParameter
        /// </summary>
        [Fact]
        public void RuleGroupParameterInstanceTest()
        {
            // TODO uncomment below to test "IsType" RuleGroupParameter
            //Assert.IsType<RuleGroupParameter>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'UsingGlobal'
        /// </summary>
        [Fact]
        public void UsingGlobalTest()
        {
            // TODO unit test for the property 'UsingGlobal'
        }

        /// <summary>
        /// Test the property 'IsEditable'
        /// </summary>
        [Fact]
        public void IsEditableTest()
        {
            // TODO unit test for the property 'IsEditable'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'Position'
        /// </summary>
        [Fact]
        public void PositionTest()
        {
            // TODO unit test for the property 'Position'
        }

        /// <summary>
        /// Test the property 'ReferencedProperty'
        /// </summary>
        [Fact]
        public void ReferencedPropertyTest()
        {
            // TODO unit test for the property 'ReferencedProperty'
        }

        /// <summary>
        /// Test the property 'ReferencedRule'
        /// </summary>
        [Fact]
        public void ReferencedRuleTest()
        {
            // TODO unit test for the property 'ReferencedRule'
        }

        /// <summary>
        /// Test the property 'PropertyType'
        /// </summary>
        [Fact]
        public void PropertyTypeTest()
        {
            // TODO unit test for the property 'PropertyType'
        }

        /// <summary>
        /// Test the property 'Units'
        /// </summary>
        [Fact]
        public void UnitsTest()
        {
            // TODO unit test for the property 'Units'
        }

        /// <summary>
        /// Test the property 'GlobalParam'
        /// </summary>
        [Fact]
        public void GlobalParamTest()
        {
            // TODO unit test for the property 'GlobalParam'
        }

        /// <summary>
        /// Test the property 'DefaultValue'
        /// </summary>
        [Fact]
        public void DefaultValueTest()
        {
            // TODO unit test for the property 'DefaultValue'
        }

        /// <summary>
        /// Test the property 'IsVisible'
        /// </summary>
        [Fact]
        public void IsVisibleTest()
        {
            // TODO unit test for the property 'IsVisible'
        }

        /// <summary>
        /// Test the property 'Templatename'
        /// </summary>
        [Fact]
        public void TemplatenameTest()
        {
            // TODO unit test for the property 'Templatename'
        }

        /// <summary>
        /// Test the property 'DataType'
        /// </summary>
        [Fact]
        public void DataTypeTest()
        {
            // TODO unit test for the property 'DataType'
        }

        /// <summary>
        /// Test the property 'Targets'
        /// </summary>
        [Fact]
        public void TargetsTest()
        {
            // TODO unit test for the property 'Targets'
        }

        /// <summary>
        /// Test the property 'PickListItems'
        /// </summary>
        [Fact]
        public void PickListItemsTest()
        {
            // TODO unit test for the property 'PickListItems'
        }

        /// <summary>
        /// Test the property 'IconAndColor'
        /// </summary>
        [Fact]
        public void IconAndColorTest()
        {
            // TODO unit test for the property 'IconAndColor'
        }

        /// <summary>
        /// Test the property 'TemplateId'
        /// </summary>
        [Fact]
        public void TemplateIdTest()
        {
            // TODO unit test for the property 'TemplateId'
        }
    }
}
