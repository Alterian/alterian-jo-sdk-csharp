/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JO.Model;
using Alterian.JO.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JO.Test.Model
{
    /// <summary>
    ///  Class for testing FlowReport
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FlowReportTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FlowReport
        //private FlowReport instance;

        public FlowReportTests()
        {
            // TODO uncomment below to create an instance of FlowReport
            //instance = new FlowReport();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FlowReport
        /// </summary>
        [Fact]
        public void FlowReportInstanceTest()
        {
            // TODO uncomment below to test "IsType" FlowReport
            //Assert.IsType<FlowReport>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Label'
        /// </summary>
        [Fact]
        public void LabelTest()
        {
            // TODO unit test for the property 'Label'
        }

        /// <summary>
        /// Test the property 'Position'
        /// </summary>
        [Fact]
        public void PositionTest()
        {
            // TODO unit test for the property 'Position'
        }

        /// <summary>
        /// Test the property 'Height'
        /// </summary>
        [Fact]
        public void HeightTest()
        {
            // TODO unit test for the property 'Height'
        }

        /// <summary>
        /// Test the property 'Width'
        /// </summary>
        [Fact]
        public void WidthTest()
        {
            // TODO unit test for the property 'Width'
        }

        /// <summary>
        /// Test the property 'SourcePosition'
        /// </summary>
        [Fact]
        public void SourcePositionTest()
        {
            // TODO unit test for the property 'SourcePosition'
        }

        /// <summary>
        /// Test the property 'TargetPosition'
        /// </summary>
        [Fact]
        public void TargetPositionTest()
        {
            // TODO unit test for the property 'TargetPosition'
        }

        /// <summary>
        /// Test the property 'MarkerEnd'
        /// </summary>
        [Fact]
        public void MarkerEndTest()
        {
            // TODO unit test for the property 'MarkerEnd'
        }

        /// <summary>
        /// Test the property 'Source'
        /// </summary>
        [Fact]
        public void SourceTest()
        {
            // TODO unit test for the property 'Source'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'VarClass'
        /// </summary>
        [Fact]
        public void VarClassTest()
        {
            // TODO unit test for the property 'VarClass'
        }

        /// <summary>
        /// Test the property 'Target'
        /// </summary>
        [Fact]
        public void TargetTest()
        {
            // TODO unit test for the property 'Target'
        }
    }
}
