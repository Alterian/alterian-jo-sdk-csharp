/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JO.Model;
using Alterian.JO.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JO.Test.Model
{
    /// <summary>
    ///  Class for testing ClusterStreamData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ClusterStreamDataTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ClusterStreamData
        //private ClusterStreamData instance;

        public ClusterStreamDataTests()
        {
            // TODO uncomment below to create an instance of ClusterStreamData
            //instance = new ClusterStreamData();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ClusterStreamData
        /// </summary>
        [Fact]
        public void ClusterStreamDataInstanceTest()
        {
            // TODO uncomment below to test "IsType" ClusterStreamData
            //Assert.IsType<ClusterStreamData>(instance);
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'PlanId'
        /// </summary>
        [Fact]
        public void PlanIdTest()
        {
            // TODO unit test for the property 'PlanId'
        }

        /// <summary>
        /// Test the property 'TotalRxBytes'
        /// </summary>
        [Fact]
        public void TotalRxBytesTest()
        {
            // TODO unit test for the property 'TotalRxBytes'
        }

        /// <summary>
        /// Test the property 'CurrentRxBytes'
        /// </summary>
        [Fact]
        public void CurrentRxBytesTest()
        {
            // TODO unit test for the property 'CurrentRxBytes'
        }

        /// <summary>
        /// Test the property 'RxPercentage'
        /// </summary>
        [Fact]
        public void RxPercentageTest()
        {
            // TODO unit test for the property 'RxPercentage'
        }

        /// <summary>
        /// Test the property 'TotalTxBytes'
        /// </summary>
        [Fact]
        public void TotalTxBytesTest()
        {
            // TODO unit test for the property 'TotalTxBytes'
        }

        /// <summary>
        /// Test the property 'CurrentTxBytes'
        /// </summary>
        [Fact]
        public void CurrentTxBytesTest()
        {
            // TODO unit test for the property 'CurrentTxBytes'
        }

        /// <summary>
        /// Test the property 'TxPercentage'
        /// </summary>
        [Fact]
        public void TxPercentageTest()
        {
            // TODO unit test for the property 'TxPercentage'
        }
    }
}
