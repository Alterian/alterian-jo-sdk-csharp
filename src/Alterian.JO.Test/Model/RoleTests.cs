/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JO.Model;
using Alterian.JO.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JO.Test.Model
{
    /// <summary>
    ///  Class for testing Role
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RoleTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Role
        //private Role instance;

        public RoleTests()
        {
            // TODO uncomment below to create an instance of Role
            //instance = new Role();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Role
        /// </summary>
        [Fact]
        public void RoleInstanceTest()
        {
            // TODO uncomment below to test "IsType" Role
            //Assert.IsType<Role>(instance);
        }

        /// <summary>
        /// Test the property 'LastModifiedDate'
        /// </summary>
        [Fact]
        public void LastModifiedDateTest()
        {
            // TODO unit test for the property 'LastModifiedDate'
        }

        /// <summary>
        /// Test the property 'LastModifiedUser'
        /// </summary>
        [Fact]
        public void LastModifiedUserTest()
        {
            // TODO unit test for the property 'LastModifiedUser'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'VarSystem'
        /// </summary>
        [Fact]
        public void VarSystemTest()
        {
            // TODO unit test for the property 'VarSystem'
        }

        /// <summary>
        /// Test the property 'Clients'
        /// </summary>
        [Fact]
        public void ClientsTest()
        {
            // TODO unit test for the property 'Clients'
        }

        /// <summary>
        /// Test the property 'Permissions'
        /// </summary>
        [Fact]
        public void PermissionsTest()
        {
            // TODO unit test for the property 'Permissions'
        }
    }
}
