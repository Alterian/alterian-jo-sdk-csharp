/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JO.Model;
using Alterian.JO.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JO.Test.Model
{
    /// <summary>
    ///  Class for testing PercentileStatistics
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PercentileStatisticsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PercentileStatistics
        //private PercentileStatistics instance;

        public PercentileStatisticsTests()
        {
            // TODO uncomment below to create an instance of PercentileStatistics
            //instance = new PercentileStatistics();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PercentileStatistics
        /// </summary>
        [Fact]
        public void PercentileStatisticsInstanceTest()
        {
            // TODO uncomment below to test "IsType" PercentileStatistics
            //Assert.IsType<PercentileStatistics>(instance);
        }

        /// <summary>
        /// Test the property 'P10'
        /// </summary>
        [Fact]
        public void P10Test()
        {
            // TODO unit test for the property 'P10'
        }

        /// <summary>
        /// Test the property 'P20'
        /// </summary>
        [Fact]
        public void P20Test()
        {
            // TODO unit test for the property 'P20'
        }

        /// <summary>
        /// Test the property 'P30'
        /// </summary>
        [Fact]
        public void P30Test()
        {
            // TODO unit test for the property 'P30'
        }

        /// <summary>
        /// Test the property 'P40'
        /// </summary>
        [Fact]
        public void P40Test()
        {
            // TODO unit test for the property 'P40'
        }

        /// <summary>
        /// Test the property 'P50'
        /// </summary>
        [Fact]
        public void P50Test()
        {
            // TODO unit test for the property 'P50'
        }

        /// <summary>
        /// Test the property 'P60'
        /// </summary>
        [Fact]
        public void P60Test()
        {
            // TODO unit test for the property 'P60'
        }

        /// <summary>
        /// Test the property 'P70'
        /// </summary>
        [Fact]
        public void P70Test()
        {
            // TODO unit test for the property 'P70'
        }

        /// <summary>
        /// Test the property 'P80'
        /// </summary>
        [Fact]
        public void P80Test()
        {
            // TODO unit test for the property 'P80'
        }

        /// <summary>
        /// Test the property 'P90'
        /// </summary>
        [Fact]
        public void P90Test()
        {
            // TODO unit test for the property 'P90'
        }

        /// <summary>
        /// Test the property 'P99'
        /// </summary>
        [Fact]
        public void P99Test()
        {
            // TODO unit test for the property 'P99'
        }

        /// <summary>
        /// Test the property 'Count'
        /// </summary>
        [Fact]
        public void CountTest()
        {
            // TODO unit test for the property 'Count'
        }

        /// <summary>
        /// Test the property 'Max'
        /// </summary>
        [Fact]
        public void MaxTest()
        {
            // TODO unit test for the property 'Max'
        }

        /// <summary>
        /// Test the property 'Min'
        /// </summary>
        [Fact]
        public void MinTest()
        {
            // TODO unit test for the property 'Min'
        }
    }
}
