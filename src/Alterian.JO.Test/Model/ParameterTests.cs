/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Alterian.JO.Model;
using Alterian.JO.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Alterian.JO.Test.Model
{
    /// <summary>
    ///  Class for testing Parameter
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ParameterTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Parameter
        //private Parameter instance;

        public ParameterTests()
        {
            // TODO uncomment below to create an instance of Parameter
            //instance = new Parameter();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Parameter
        /// </summary>
        [Fact]
        public void ParameterInstanceTest()
        {
            // TODO uncomment below to test "IsType" Parameter
            //Assert.IsType<Parameter>(instance);
        }

        /// <summary>
        /// Test the property 'BusinessGoal'
        /// </summary>
        [Fact]
        public void BusinessGoalTest()
        {
            // TODO unit test for the property 'BusinessGoal'
        }

        /// <summary>
        /// Test the property 'VarClient'
        /// </summary>
        [Fact]
        public void VarClientTest()
        {
            // TODO unit test for the property 'VarClient'
        }

        /// <summary>
        /// Test the property 'DataType'
        /// </summary>
        [Fact]
        public void DataTypeTest()
        {
            // TODO unit test for the property 'DataType'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'GlobalParam'
        /// </summary>
        [Fact]
        public void GlobalParamTest()
        {
            // TODO unit test for the property 'GlobalParam'
        }

        /// <summary>
        /// Test the property 'IsConfidential'
        /// </summary>
        [Fact]
        public void IsConfidentialTest()
        {
            // TODO unit test for the property 'IsConfidential'
        }

        /// <summary>
        /// Test the property 'IsEditable'
        /// </summary>
        [Fact]
        public void IsEditableTest()
        {
            // TODO unit test for the property 'IsEditable'
        }

        /// <summary>
        /// Test the property 'IsForcedValue'
        /// </summary>
        [Fact]
        public void IsForcedValueTest()
        {
            // TODO unit test for the property 'IsForcedValue'
        }

        /// <summary>
        /// Test the property 'IsVisible'
        /// </summary>
        [Fact]
        public void IsVisibleTest()
        {
            // TODO unit test for the property 'IsVisible'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'PicklistItems'
        /// </summary>
        [Fact]
        public void PicklistItemsTest()
        {
            // TODO unit test for the property 'PicklistItems'
        }

        /// <summary>
        /// Test the property 'RequiresAdmin'
        /// </summary>
        [Fact]
        public void RequiresAdminTest()
        {
            // TODO unit test for the property 'RequiresAdmin'
        }

        /// <summary>
        /// Test the property 'Targets'
        /// </summary>
        [Fact]
        public void TargetsTest()
        {
            // TODO unit test for the property 'Targets'
        }

        /// <summary>
        /// Test the property 'Units'
        /// </summary>
        [Fact]
        public void UnitsTest()
        {
            // TODO unit test for the property 'Units'
        }

        /// <summary>
        /// Test the property 'Url'
        /// </summary>
        [Fact]
        public void UrlTest()
        {
            // TODO unit test for the property 'Url'
        }
    }
}
