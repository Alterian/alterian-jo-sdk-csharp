/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JO.Client.OpenAPIDateConverter;

namespace Alterian.JO.Model
{
    /// <summary>
    /// ClusterSetting
    /// </summary>
    [DataContract(Name = "ClusterSetting")]
    public partial class ClusterSetting : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ClusterSetting" /> class.
        /// </summary>
        /// <param name="attributeName">The name of the setting to modify.</param>
        /// <param name="attributeValue">The value to set.</param>
        /// <param name="collectionName">The name of the setting collection to modify.</param>
        public ClusterSetting(string attributeName = default(string), string attributeValue = default(string), string collectionName = default(string))
        {
            this.AttributeName = attributeName;
            this.AttributeValue = attributeValue;
            this.CollectionName = collectionName;
        }

        /// <summary>
        /// The name of the setting to modify
        /// </summary>
        /// <value>The name of the setting to modify</value>
        [DataMember(Name = "attributeName", EmitDefaultValue = false)]
        public string AttributeName { get; set; }

        /// <summary>
        /// The value to set
        /// </summary>
        /// <value>The value to set</value>
        [DataMember(Name = "attributeValue", EmitDefaultValue = false)]
        public string AttributeValue { get; set; }

        /// <summary>
        /// The name of the setting collection to modify
        /// </summary>
        /// <value>The name of the setting collection to modify</value>
        [DataMember(Name = "collectionName", EmitDefaultValue = false)]
        public string CollectionName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ClusterSetting {\n");
            sb.Append("  AttributeName: ").Append(AttributeName).Append("\n");
            sb.Append("  AttributeValue: ").Append(AttributeValue).Append("\n");
            sb.Append("  CollectionName: ").Append(CollectionName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
