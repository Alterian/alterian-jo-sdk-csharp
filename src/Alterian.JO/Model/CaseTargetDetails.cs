/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JO.Client.OpenAPIDateConverter;

namespace Alterian.JO.Model
{
    /// <summary>
    /// CaseTargetDetails
    /// </summary>
    [DataContract(Name = "caseTargetDetails")]
    public partial class CaseTargetDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CaseTargetDetails" /> class.
        /// </summary>
        /// <param name="caseValue">caseValue.</param>
        /// <param name="caseTargetStepName">caseTargetStepName.</param>
        public CaseTargetDetails(string caseValue = default(string), string caseTargetStepName = default(string))
        {
            this.CaseValue = caseValue;
            this.CaseTargetStepName = caseTargetStepName;
        }

        /// <summary>
        /// Gets or Sets CaseValue
        /// </summary>
        [DataMember(Name = "caseValue", EmitDefaultValue = false)]
        public string CaseValue { get; set; }

        /// <summary>
        /// Gets or Sets CaseTargetStepName
        /// </summary>
        [DataMember(Name = "caseTargetStepName", EmitDefaultValue = false)]
        public string CaseTargetStepName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CaseTargetDetails {\n");
            sb.Append("  CaseValue: ").Append(CaseValue).Append("\n");
            sb.Append("  CaseTargetStepName: ").Append(CaseTargetStepName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
