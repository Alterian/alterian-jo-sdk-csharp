/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JO.Client.OpenAPIDateConverter;

namespace Alterian.JO.Model
{
    /// <summary>
    /// RuleGroupListing
    /// </summary>
    [DataContract(Name = "RuleGroupListing")]
    public partial class RuleGroupListing : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Target
        /// </summary>
        [DataMember(Name = "target", EmitDefaultValue = false)]
        public TargetEnum? Target { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="RuleGroupListing" /> class.
        /// </summary>
        /// <param name="description">description.</param>
        /// <param name="varVersion">varVersion.</param>
        /// <param name="url">url.</param>
        /// <param name="target">target.</param>
        /// <param name="invokeName">invokeName.</param>
        /// <param name="folder">folder.</param>
        /// <param name="enableInvoke">enableInvoke.</param>
        /// <param name="name">name.</param>
        /// <param name="modifiedDate">modifiedDate.</param>
        /// <param name="varClient">varClient.</param>
        /// <param name="modifiedBy">modifiedBy.</param>
        /// <param name="opportunitygrid">opportunitygrid.</param>
        /// <param name="referencedRules">referencedRules.</param>
        /// <param name="parameters">parameters.</param>
        /// <param name="statistics">statistics.</param>
        public RuleGroupListing(string description = default(string), string varVersion = default(string), string url = default(string), TargetEnum? target = default(TargetEnum?), string invokeName = default(string), string folder = default(string), bool enableInvoke = default(bool), string name = default(string), string modifiedDate = default(string), string varClient = default(string), string modifiedBy = default(string), List<Opportunitygrid> opportunitygrid = default(List<Opportunitygrid>), List<string> referencedRules = default(List<string>), List<RuleGroupParameter> parameters = default(List<RuleGroupParameter>), RuleGroupStatistics statistics = default(RuleGroupStatistics))
        {
            this.Description = description;
            this.VarVersion = varVersion;
            this.Url = url;
            this.Target = target;
            this.InvokeName = invokeName;
            this.Folder = folder;
            this.EnableInvoke = enableInvoke;
            this.Name = name;
            this.ModifiedDate = modifiedDate;
            this.VarClient = varClient;
            this.ModifiedBy = modifiedBy;
            this.Opportunitygrid = opportunitygrid;
            this.ReferencedRules = referencedRules;
            this.Parameters = parameters;
            this.Statistics = statistics;
        }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets VarVersion
        /// </summary>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public string VarVersion { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets InvokeName
        /// </summary>
        [DataMember(Name = "invokeName", EmitDefaultValue = false)]
        public string InvokeName { get; set; }

        /// <summary>
        /// Gets or Sets Folder
        /// </summary>
        [DataMember(Name = "folder", EmitDefaultValue = false)]
        public string Folder { get; set; }

        /// <summary>
        /// Gets or Sets EnableInvoke
        /// </summary>
        [DataMember(Name = "enableInvoke", EmitDefaultValue = true)]
        public bool EnableInvoke { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedDate
        /// </summary>
        [DataMember(Name = "modifiedDate", EmitDefaultValue = false)]
        public string ModifiedDate { get; set; }

        /// <summary>
        /// Gets or Sets VarClient
        /// </summary>
        [DataMember(Name = "client", EmitDefaultValue = false)]
        public string VarClient { get; set; }

        /// <summary>
        /// Gets or Sets ModifiedBy
        /// </summary>
        [DataMember(Name = "modifiedBy", EmitDefaultValue = false)]
        public string ModifiedBy { get; set; }

        /// <summary>
        /// Gets or Sets Opportunitygrid
        /// </summary>
        [DataMember(Name = "opportunitygrid", EmitDefaultValue = false)]
        public List<Opportunitygrid> Opportunitygrid { get; set; }

        /// <summary>
        /// Gets or Sets ReferencedRules
        /// </summary>
        [DataMember(Name = "referencedRules", EmitDefaultValue = false)]
        public List<string> ReferencedRules { get; set; }

        /// <summary>
        /// Gets or Sets Parameters
        /// </summary>
        [DataMember(Name = "parameters", EmitDefaultValue = false)]
        public List<RuleGroupParameter> Parameters { get; set; }

        /// <summary>
        /// Gets or Sets Statistics
        /// </summary>
        [DataMember(Name = "statistics", EmitDefaultValue = false)]
        public RuleGroupStatistics Statistics { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RuleGroupListing {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Target: ").Append(Target).Append("\n");
            sb.Append("  InvokeName: ").Append(InvokeName).Append("\n");
            sb.Append("  Folder: ").Append(Folder).Append("\n");
            sb.Append("  EnableInvoke: ").Append(EnableInvoke).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ModifiedDate: ").Append(ModifiedDate).Append("\n");
            sb.Append("  VarClient: ").Append(VarClient).Append("\n");
            sb.Append("  ModifiedBy: ").Append(ModifiedBy).Append("\n");
            sb.Append("  Opportunitygrid: ").Append(Opportunitygrid).Append("\n");
            sb.Append("  ReferencedRules: ").Append(ReferencedRules).Append("\n");
            sb.Append("  Parameters: ").Append(Parameters).Append("\n");
            sb.Append("  Statistics: ").Append(Statistics).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
