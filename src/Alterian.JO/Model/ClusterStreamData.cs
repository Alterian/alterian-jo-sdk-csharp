/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JO.Client.OpenAPIDateConverter;

namespace Alterian.JO.Model
{
    /// <summary>
    /// ClusterStreamData
    /// </summary>
    [DataContract(Name = "ClusterStreamData")]
    public partial class ClusterStreamData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ClusterStreamData" /> class.
        /// </summary>
        /// <param name="description">description.</param>
        /// <param name="planId">planId.</param>
        /// <param name="totalRxBytes">totalRxBytes.</param>
        /// <param name="currentRxBytes">currentRxBytes.</param>
        /// <param name="rxPercentage">rxPercentage.</param>
        /// <param name="totalTxBytes">totalTxBytes.</param>
        /// <param name="currentTxBytes">currentTxBytes.</param>
        /// <param name="txPercentage">txPercentage.</param>
        public ClusterStreamData(string description = default(string), string planId = default(string), int totalRxBytes = default(int), int currentRxBytes = default(int), int rxPercentage = default(int), int totalTxBytes = default(int), int currentTxBytes = default(int), int txPercentage = default(int))
        {
            this.Description = description;
            this.PlanId = planId;
            this.TotalRxBytes = totalRxBytes;
            this.CurrentRxBytes = currentRxBytes;
            this.RxPercentage = rxPercentage;
            this.TotalTxBytes = totalTxBytes;
            this.CurrentTxBytes = currentTxBytes;
            this.TxPercentage = txPercentage;
        }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets PlanId
        /// </summary>
        [DataMember(Name = "planId", EmitDefaultValue = false)]
        public string PlanId { get; set; }

        /// <summary>
        /// Gets or Sets TotalRxBytes
        /// </summary>
        [DataMember(Name = "totalRxBytes", EmitDefaultValue = false)]
        public int TotalRxBytes { get; set; }

        /// <summary>
        /// Gets or Sets CurrentRxBytes
        /// </summary>
        [DataMember(Name = "currentRxBytes", EmitDefaultValue = false)]
        public int CurrentRxBytes { get; set; }

        /// <summary>
        /// Gets or Sets RxPercentage
        /// </summary>
        [DataMember(Name = "rxPercentage", EmitDefaultValue = false)]
        public int RxPercentage { get; set; }

        /// <summary>
        /// Gets or Sets TotalTxBytes
        /// </summary>
        [DataMember(Name = "totalTxBytes", EmitDefaultValue = false)]
        public int TotalTxBytes { get; set; }

        /// <summary>
        /// Gets or Sets CurrentTxBytes
        /// </summary>
        [DataMember(Name = "currentTxBytes", EmitDefaultValue = false)]
        public int CurrentTxBytes { get; set; }

        /// <summary>
        /// Gets or Sets TxPercentage
        /// </summary>
        [DataMember(Name = "txPercentage", EmitDefaultValue = false)]
        public int TxPercentage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ClusterStreamData {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  PlanId: ").Append(PlanId).Append("\n");
            sb.Append("  TotalRxBytes: ").Append(TotalRxBytes).Append("\n");
            sb.Append("  CurrentRxBytes: ").Append(CurrentRxBytes).Append("\n");
            sb.Append("  RxPercentage: ").Append(RxPercentage).Append("\n");
            sb.Append("  TotalTxBytes: ").Append(TotalTxBytes).Append("\n");
            sb.Append("  CurrentTxBytes: ").Append(CurrentTxBytes).Append("\n");
            sb.Append("  TxPercentage: ").Append(TxPercentage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
