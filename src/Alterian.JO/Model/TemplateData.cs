/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JO.Client.OpenAPIDateConverter;

namespace Alterian.JO.Model
{
    /// <summary>
    /// TemplateData
    /// </summary>
    [DataContract(Name = "templateData")]
    public partial class TemplateData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateData" /> class.
        /// </summary>
        /// <param name="inputconnectors">inputconnectors.</param>
        /// <param name="datagrids">datagrids.</param>
        /// <param name="datagridsdetails">datagridsdetails.</param>
        /// <param name="cxidprovider">cxidprovider.</param>
        /// <param name="templatelastmodifieddate">templatelastmodifieddate.</param>
        /// <param name="serviceCost">serviceCost.</param>
        /// <param name="icon">icon.</param>
        /// <param name="outputconnectors">outputconnectors.</param>
        /// <param name="isstarttile">isstarttile.</param>
        /// <param name="varVersion">varVersion.</param>
        /// <param name="url">url.</param>
        /// <param name="templatelastmodifieduser">templatelastmodifieduser.</param>
        /// <param name="ktrname">ktrname.</param>
        /// <param name="realtimeRuleSteps">realtimeRuleSteps.</param>
        /// <param name="helpLink">helpLink.</param>
        /// <param name="realtimeInputSteps">realtimeInputSteps.</param>
        /// <param name="switchcases">switchcases.</param>
        /// <param name="controlEnabled">controlEnabled.</param>
        /// <param name="varClient">varClient.</param>
        /// <param name="templatename">templatename.</param>
        /// <param name="mabsteps">mabsteps.</param>
        /// <param name="jsonDecoders">jsonDecoders.</param>
        /// <param name="parameters">parameters.</param>
        /// <param name="templatedescription">templatedescription.</param>
        public TemplateData(List<InputConnector> inputconnectors = default(List<InputConnector>), List<string> datagrids = default(List<string>), List<DataGridDetails> datagridsdetails = default(List<DataGridDetails>), bool cxidprovider = default(bool), string templatelastmodifieddate = default(string), decimal serviceCost = default(decimal), Icon icon = default(Icon), List<OutputConnector> outputconnectors = default(List<OutputConnector>), bool isstarttile = default(bool), string varVersion = default(string), string url = default(string), string templatelastmodifieduser = default(string), string ktrname = default(string), List<RuleCallDetails> realtimeRuleSteps = default(List<RuleCallDetails>), string helpLink = default(string), List<RealtimeInputStepDetails> realtimeInputSteps = default(List<RealtimeInputStepDetails>), List<SwitchCaseDetails> switchcases = default(List<SwitchCaseDetails>), bool controlEnabled = default(bool), string varClient = default(string), string templatename = default(string), List<MABStepDetails> mabsteps = default(List<MABStepDetails>), List<JsonDecoderDetails> jsonDecoders = default(List<JsonDecoderDetails>), List<RuleParameter> parameters = default(List<RuleParameter>), string templatedescription = default(string))
        {
            this.Inputconnectors = inputconnectors;
            this.Datagrids = datagrids;
            this.Datagridsdetails = datagridsdetails;
            this.Cxidprovider = cxidprovider;
            this.Templatelastmodifieddate = templatelastmodifieddate;
            this.ServiceCost = serviceCost;
            this.Icon = icon;
            this.Outputconnectors = outputconnectors;
            this.Isstarttile = isstarttile;
            this.VarVersion = varVersion;
            this.Url = url;
            this.Templatelastmodifieduser = templatelastmodifieduser;
            this.Ktrname = ktrname;
            this.RealtimeRuleSteps = realtimeRuleSteps;
            this.HelpLink = helpLink;
            this.RealtimeInputSteps = realtimeInputSteps;
            this.Switchcases = switchcases;
            this.ControlEnabled = controlEnabled;
            this.VarClient = varClient;
            this.Templatename = templatename;
            this.Mabsteps = mabsteps;
            this.JsonDecoders = jsonDecoders;
            this.Parameters = parameters;
            this.Templatedescription = templatedescription;
        }

        /// <summary>
        /// Gets or Sets Inputconnectors
        /// </summary>
        [DataMember(Name = "inputconnectors", EmitDefaultValue = false)]
        public List<InputConnector> Inputconnectors { get; set; }

        /// <summary>
        /// Gets or Sets Datagrids
        /// </summary>
        [DataMember(Name = "datagrids", EmitDefaultValue = false)]
        public List<string> Datagrids { get; set; }

        /// <summary>
        /// Gets or Sets Datagridsdetails
        /// </summary>
        [DataMember(Name = "datagridsdetails", EmitDefaultValue = false)]
        public List<DataGridDetails> Datagridsdetails { get; set; }

        /// <summary>
        /// Gets or Sets Cxidprovider
        /// </summary>
        [DataMember(Name = "cxidprovider", EmitDefaultValue = true)]
        public bool Cxidprovider { get; set; }

        /// <summary>
        /// Gets or Sets Templatelastmodifieddate
        /// </summary>
        [DataMember(Name = "templatelastmodifieddate", EmitDefaultValue = false)]
        public string Templatelastmodifieddate { get; set; }

        /// <summary>
        /// Gets or Sets ServiceCost
        /// </summary>
        [DataMember(Name = "serviceCost", EmitDefaultValue = false)]
        public decimal ServiceCost { get; set; }

        /// <summary>
        /// Gets or Sets Icon
        /// </summary>
        [DataMember(Name = "icon", EmitDefaultValue = false)]
        public Icon Icon { get; set; }

        /// <summary>
        /// Gets or Sets Outputconnectors
        /// </summary>
        [DataMember(Name = "outputconnectors", EmitDefaultValue = false)]
        public List<OutputConnector> Outputconnectors { get; set; }

        /// <summary>
        /// Gets or Sets Isstarttile
        /// </summary>
        [DataMember(Name = "isstarttile", EmitDefaultValue = true)]
        public bool Isstarttile { get; set; }

        /// <summary>
        /// Gets or Sets VarVersion
        /// </summary>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public string VarVersion { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets Templatelastmodifieduser
        /// </summary>
        [DataMember(Name = "templatelastmodifieduser", EmitDefaultValue = false)]
        public string Templatelastmodifieduser { get; set; }

        /// <summary>
        /// Gets or Sets Ktrname
        /// </summary>
        [DataMember(Name = "ktrname", EmitDefaultValue = false)]
        public string Ktrname { get; set; }

        /// <summary>
        /// Gets or Sets RealtimeRuleSteps
        /// </summary>
        [DataMember(Name = "realtimeRuleSteps", EmitDefaultValue = false)]
        public List<RuleCallDetails> RealtimeRuleSteps { get; set; }

        /// <summary>
        /// Gets or Sets HelpLink
        /// </summary>
        [DataMember(Name = "helpLink", EmitDefaultValue = false)]
        public string HelpLink { get; set; }

        /// <summary>
        /// Gets or Sets RealtimeInputSteps
        /// </summary>
        [DataMember(Name = "realtimeInputSteps", EmitDefaultValue = false)]
        public List<RealtimeInputStepDetails> RealtimeInputSteps { get; set; }

        /// <summary>
        /// Gets or Sets Switchcases
        /// </summary>
        [DataMember(Name = "switchcases", EmitDefaultValue = false)]
        public List<SwitchCaseDetails> Switchcases { get; set; }

        /// <summary>
        /// Gets or Sets ControlEnabled
        /// </summary>
        [DataMember(Name = "controlEnabled", EmitDefaultValue = true)]
        public bool ControlEnabled { get; set; }

        /// <summary>
        /// Gets or Sets VarClient
        /// </summary>
        [DataMember(Name = "client", EmitDefaultValue = false)]
        public string VarClient { get; set; }

        /// <summary>
        /// Gets or Sets Templatename
        /// </summary>
        [DataMember(Name = "templatename", EmitDefaultValue = false)]
        public string Templatename { get; set; }

        /// <summary>
        /// Gets or Sets Mabsteps
        /// </summary>
        [DataMember(Name = "mabsteps", EmitDefaultValue = false)]
        public List<MABStepDetails> Mabsteps { get; set; }

        /// <summary>
        /// Gets or Sets JsonDecoders
        /// </summary>
        [DataMember(Name = "jsonDecoders", EmitDefaultValue = false)]
        public List<JsonDecoderDetails> JsonDecoders { get; set; }

        /// <summary>
        /// Gets or Sets Parameters
        /// </summary>
        [DataMember(Name = "parameters", EmitDefaultValue = false)]
        public List<RuleParameter> Parameters { get; set; }

        /// <summary>
        /// Gets or Sets Templatedescription
        /// </summary>
        [DataMember(Name = "templatedescription", EmitDefaultValue = false)]
        public string Templatedescription { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TemplateData {\n");
            sb.Append("  Inputconnectors: ").Append(Inputconnectors).Append("\n");
            sb.Append("  Datagrids: ").Append(Datagrids).Append("\n");
            sb.Append("  Datagridsdetails: ").Append(Datagridsdetails).Append("\n");
            sb.Append("  Cxidprovider: ").Append(Cxidprovider).Append("\n");
            sb.Append("  Templatelastmodifieddate: ").Append(Templatelastmodifieddate).Append("\n");
            sb.Append("  ServiceCost: ").Append(ServiceCost).Append("\n");
            sb.Append("  Icon: ").Append(Icon).Append("\n");
            sb.Append("  Outputconnectors: ").Append(Outputconnectors).Append("\n");
            sb.Append("  Isstarttile: ").Append(Isstarttile).Append("\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Templatelastmodifieduser: ").Append(Templatelastmodifieduser).Append("\n");
            sb.Append("  Ktrname: ").Append(Ktrname).Append("\n");
            sb.Append("  RealtimeRuleSteps: ").Append(RealtimeRuleSteps).Append("\n");
            sb.Append("  HelpLink: ").Append(HelpLink).Append("\n");
            sb.Append("  RealtimeInputSteps: ").Append(RealtimeInputSteps).Append("\n");
            sb.Append("  Switchcases: ").Append(Switchcases).Append("\n");
            sb.Append("  ControlEnabled: ").Append(ControlEnabled).Append("\n");
            sb.Append("  VarClient: ").Append(VarClient).Append("\n");
            sb.Append("  Templatename: ").Append(Templatename).Append("\n");
            sb.Append("  Mabsteps: ").Append(Mabsteps).Append("\n");
            sb.Append("  JsonDecoders: ").Append(JsonDecoders).Append("\n");
            sb.Append("  Parameters: ").Append(Parameters).Append("\n");
            sb.Append("  Templatedescription: ").Append(Templatedescription).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
