/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JO.Client.OpenAPIDateConverter;

namespace Alterian.JO.Model
{
    /// <summary>
    /// Site
    /// </summary>
    [DataContract(Name = "site")]
    public partial class Site : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Site" /> class.
        /// </summary>
        /// <param name="lastModifiedDate">When was this object last modified? Timestamp in ISO-8601 format.</param>
        /// <param name="lastModifiedUser">What is the name of the user who last modified this object?.</param>
        /// <param name="siteId">A UUID to uniquely identify this site.</param>
        /// <param name="extendedInfo">Additional site-specific information.</param>
        /// <param name="users">users.</param>
        public Site(string lastModifiedDate = default(string), string lastModifiedUser = default(string), string siteId = default(string), string extendedInfo = default(string), List<string> users = default(List<string>))
        {
            this.LastModifiedDate = lastModifiedDate;
            this.LastModifiedUser = lastModifiedUser;
            this.SiteId = siteId;
            this.ExtendedInfo = extendedInfo;
            this.Users = users;
        }

        /// <summary>
        /// When was this object last modified? Timestamp in ISO-8601 format
        /// </summary>
        /// <value>When was this object last modified? Timestamp in ISO-8601 format</value>
        [DataMember(Name = "lastModifiedDate", EmitDefaultValue = false)]
        public string LastModifiedDate { get; set; }

        /// <summary>
        /// What is the name of the user who last modified this object?
        /// </summary>
        /// <value>What is the name of the user who last modified this object?</value>
        [DataMember(Name = "lastModifiedUser", EmitDefaultValue = false)]
        public string LastModifiedUser { get; set; }

        /// <summary>
        /// A UUID to uniquely identify this site
        /// </summary>
        /// <value>A UUID to uniquely identify this site</value>
        [DataMember(Name = "siteId", EmitDefaultValue = false)]
        public string SiteId { get; set; }

        /// <summary>
        /// Additional site-specific information
        /// </summary>
        /// <value>Additional site-specific information</value>
        [DataMember(Name = "extendedInfo", EmitDefaultValue = false)]
        public string ExtendedInfo { get; set; }

        /// <summary>
        /// Gets or Sets Users
        /// </summary>
        [DataMember(Name = "users", EmitDefaultValue = false)]
        public List<string> Users { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Site {\n");
            sb.Append("  LastModifiedDate: ").Append(LastModifiedDate).Append("\n");
            sb.Append("  LastModifiedUser: ").Append(LastModifiedUser).Append("\n");
            sb.Append("  SiteId: ").Append(SiteId).Append("\n");
            sb.Append("  ExtendedInfo: ").Append(ExtendedInfo).Append("\n");
            sb.Append("  Users: ").Append(Users).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
