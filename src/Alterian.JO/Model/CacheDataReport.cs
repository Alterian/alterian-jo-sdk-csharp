/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JO.Client.OpenAPIDateConverter;

namespace Alterian.JO.Model
{
    /// <summary>
    /// CacheDataReport
    /// </summary>
    [DataContract(Name = "CacheDataReport")]
    public partial class CacheDataReport : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Direction
        /// </summary>
        [DataMember(Name = "direction", EmitDefaultValue = false)]
        public CacheDirectionEnum? Direction { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CacheDataReport" /> class.
        /// </summary>
        /// <param name="column">column.</param>
        /// <param name="rulename">rulename.</param>
        /// <param name="table">table.</param>
        /// <param name="url">url.</param>
        /// <param name="direction">direction.</param>
        public CacheDataReport(string column = default(string), string rulename = default(string), string table = default(string), string url = default(string), CacheDirectionEnum? direction = default(CacheDirectionEnum?))
        {
            this.Column = column;
            this.Rulename = rulename;
            this.Table = table;
            this.Url = url;
            this.Direction = direction;
        }

        /// <summary>
        /// Gets or Sets Column
        /// </summary>
        [DataMember(Name = "column", EmitDefaultValue = false)]
        public string Column { get; set; }

        /// <summary>
        /// Gets or Sets Rulename
        /// </summary>
        [DataMember(Name = "rulename", EmitDefaultValue = false)]
        public string Rulename { get; set; }

        /// <summary>
        /// Gets or Sets Table
        /// </summary>
        [DataMember(Name = "table", EmitDefaultValue = false)]
        public string Table { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CacheDataReport {\n");
            sb.Append("  Column: ").Append(Column).Append("\n");
            sb.Append("  Rulename: ").Append(Rulename).Append("\n");
            sb.Append("  Table: ").Append(Table).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Direction: ").Append(Direction).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
