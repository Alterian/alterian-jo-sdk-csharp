/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JO.Client.OpenAPIDateConverter;

namespace Alterian.JO.Model
{
    /// <summary>
    /// PercentileStatistics
    /// </summary>
    [DataContract(Name = "PercentileStatistics")]
    public partial class PercentileStatistics : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PercentileStatistics" /> class.
        /// </summary>
        /// <param name="p10">p10.</param>
        /// <param name="p20">p20.</param>
        /// <param name="p30">p30.</param>
        /// <param name="p40">p40.</param>
        /// <param name="p50">p50.</param>
        /// <param name="p60">p60.</param>
        /// <param name="p70">p70.</param>
        /// <param name="p80">p80.</param>
        /// <param name="p90">p90.</param>
        /// <param name="p99">p99.</param>
        /// <param name="count">count.</param>
        /// <param name="max">max.</param>
        /// <param name="min">min.</param>
        public PercentileStatistics(string p10 = default(string), string p20 = default(string), string p30 = default(string), string p40 = default(string), string p50 = default(string), string p60 = default(string), string p70 = default(string), string p80 = default(string), string p90 = default(string), string p99 = default(string), int count = default(int), string max = default(string), string min = default(string))
        {
            this.P10 = p10;
            this.P20 = p20;
            this.P30 = p30;
            this.P40 = p40;
            this.P50 = p50;
            this.P60 = p60;
            this.P70 = p70;
            this.P80 = p80;
            this.P90 = p90;
            this.P99 = p99;
            this.Count = count;
            this.Max = max;
            this.Min = min;
        }

        /// <summary>
        /// Gets or Sets P10
        /// </summary>
        [DataMember(Name = "p10", EmitDefaultValue = false)]
        public string P10 { get; set; }

        /// <summary>
        /// Gets or Sets P20
        /// </summary>
        [DataMember(Name = "p20", EmitDefaultValue = false)]
        public string P20 { get; set; }

        /// <summary>
        /// Gets or Sets P30
        /// </summary>
        [DataMember(Name = "p30", EmitDefaultValue = false)]
        public string P30 { get; set; }

        /// <summary>
        /// Gets or Sets P40
        /// </summary>
        [DataMember(Name = "p40", EmitDefaultValue = false)]
        public string P40 { get; set; }

        /// <summary>
        /// Gets or Sets P50
        /// </summary>
        [DataMember(Name = "p50", EmitDefaultValue = false)]
        public string P50 { get; set; }

        /// <summary>
        /// Gets or Sets P60
        /// </summary>
        [DataMember(Name = "p60", EmitDefaultValue = false)]
        public string P60 { get; set; }

        /// <summary>
        /// Gets or Sets P70
        /// </summary>
        [DataMember(Name = "p70", EmitDefaultValue = false)]
        public string P70 { get; set; }

        /// <summary>
        /// Gets or Sets P80
        /// </summary>
        [DataMember(Name = "p80", EmitDefaultValue = false)]
        public string P80 { get; set; }

        /// <summary>
        /// Gets or Sets P90
        /// </summary>
        [DataMember(Name = "p90", EmitDefaultValue = false)]
        public string P90 { get; set; }

        /// <summary>
        /// Gets or Sets P99
        /// </summary>
        [DataMember(Name = "p99", EmitDefaultValue = false)]
        public string P99 { get; set; }

        /// <summary>
        /// Gets or Sets Count
        /// </summary>
        [DataMember(Name = "count", EmitDefaultValue = false)]
        public int Count { get; set; }

        /// <summary>
        /// Gets or Sets Max
        /// </summary>
        [DataMember(Name = "max", EmitDefaultValue = false)]
        public string Max { get; set; }

        /// <summary>
        /// Gets or Sets Min
        /// </summary>
        [DataMember(Name = "min", EmitDefaultValue = false)]
        public string Min { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PercentileStatistics {\n");
            sb.Append("  P10: ").Append(P10).Append("\n");
            sb.Append("  P20: ").Append(P20).Append("\n");
            sb.Append("  P30: ").Append(P30).Append("\n");
            sb.Append("  P40: ").Append(P40).Append("\n");
            sb.Append("  P50: ").Append(P50).Append("\n");
            sb.Append("  P60: ").Append(P60).Append("\n");
            sb.Append("  P70: ").Append(P70).Append("\n");
            sb.Append("  P80: ").Append(P80).Append("\n");
            sb.Append("  P90: ").Append(P90).Append("\n");
            sb.Append("  P99: ").Append(P99).Append("\n");
            sb.Append("  Count: ").Append(Count).Append("\n");
            sb.Append("  Max: ").Append(Max).Append("\n");
            sb.Append("  Min: ").Append(Min).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
