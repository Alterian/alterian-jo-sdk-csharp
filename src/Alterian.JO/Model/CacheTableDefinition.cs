/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JO.Client.OpenAPIDateConverter;

namespace Alterian.JO.Model
{
    /// <summary>
    /// CacheTableDefinition
    /// </summary>
    [DataContract(Name = "CacheTableDefinition")]
    public partial class CacheTableDefinition : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CacheTableDefinition" /> class.
        /// </summary>
        /// <param name="fields">The fields of the table. Will always extend any existing tables.</param>
        /// <param name="name">The name of the table to alter..</param>
        public CacheTableDefinition(List<CacheColumn> fields = default(List<CacheColumn>), string name = default(string))
        {
            this.Fields = fields;
            this.Name = name;
        }

        /// <summary>
        /// The fields of the table. Will always extend any existing tables
        /// </summary>
        /// <value>The fields of the table. Will always extend any existing tables</value>
        [DataMember(Name = "fields", EmitDefaultValue = false)]
        public List<CacheColumn> Fields { get; set; }

        /// <summary>
        /// The name of the table to alter.
        /// </summary>
        /// <value>The name of the table to alter.</value>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CacheTableDefinition {\n");
            sb.Append("  Fields: ").Append(Fields).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
