/*
 * Journey Orchestration API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Alterian.JO.Client.OpenAPIDateConverter;

namespace Alterian.JO.Model
{
    /// <summary>
    /// Kettle Data Types
    /// </summary>
    /// <value>Kettle Data Types</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum KettleFieldType
    {
        /// <summary>
        /// Enum BigNumber for value: BigNumber
        /// </summary>
        [EnumMember(Value = "BigNumber")]
        BigNumber = 1,

        /// <summary>
        /// Enum Binary for value: Binary
        /// </summary>
        [EnumMember(Value = "Binary")]
        Binary = 2,

        /// <summary>
        /// Enum Blob for value: blob
        /// </summary>
        [EnumMember(Value = "blob")]
        Blob = 3,

        /// <summary>
        /// Enum Boolean for value: Boolean
        /// </summary>
        [EnumMember(Value = "Boolean")]
        Boolean = 4,

        /// <summary>
        /// Enum Counter for value: counter
        /// </summary>
        [EnumMember(Value = "counter")]
        Counter = 5,

        /// <summary>
        /// Enum Date for value: Date
        /// </summary>
        [EnumMember(Value = "Date")]
        Date = 6,

        /// <summary>
        /// Enum Integer for value: Integer
        /// </summary>
        [EnumMember(Value = "Integer")]
        Integer = 7,

        /// <summary>
        /// Enum InternetAddress for value: Internet Address
        /// </summary>
        [EnumMember(Value = "Internet Address")]
        InternetAddress = 8,

        /// <summary>
        /// Enum Number for value: Number
        /// </summary>
        [EnumMember(Value = "Number")]
        Number = 9,

        /// <summary>
        /// Enum String for value: String
        /// </summary>
        [EnumMember(Value = "String")]
        String = 10,

        /// <summary>
        /// Enum Timestamp for value: Timestamp
        /// </summary>
        [EnumMember(Value = "Timestamp")]
        Timestamp = 11
    }

}
